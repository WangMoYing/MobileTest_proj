<UserControl x:Class="AliyunMobileTestTechnology.View.CoverageView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:AliyunMobileTestTechnology.View"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="700">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colours.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Width" Value="18"/>
                <Setter Property="Height" Value="14"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Rectangle Width="18" Height="13">
                                <Rectangle.Resources>
                                    <SolidColorBrush x:Key="BlackBrush" Color="#CC119EDA" />
                                </Rectangle.Resources>
                                <Rectangle.Fill>
                                    <VisualBrush Stretch="Fill">
                                        <VisualBrush.Visual>
                                            <Canvas Width="48" Height="48" Clip="F1 M 0,0L 48,0L 48,48L 0,48L 0,0" UseLayoutRounding="False">
                                                <Path Name="ExpandPath" Width="26.5833" Height="19" Canvas.Left="13" Canvas.Top="13" Stretch="Fill" Fill="{DynamicResource BlackBrush}" Data="F1 M 16.6668,20L 13,28.5336L 13,16L 23,16L 23,15C 23,13.8954 23.8954,13 25,13L 32,13C 33.1046,13 35,14.8954 35,16L 35,20L 16.6668,20 Z M 35,32L 28,32L 13,32L 17.5833,21L 39.5833,21L 35,32 Z " />
                                            </Canvas>
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <ControlTemplate.Triggers>
                                <Trigger Property="ToggleButton.IsChecked" Value="True">
                                    <Setter Property="Path.Data" TargetName="ExpandPath">
                                        <Setter.Value>
                                            <StreamGeometry>F1 M 13,16L 23,16L 23,15C 23,13.8954 23.8954,13 25,13L 32,13C 33.1046,13 35,14.8954 35,16L 35,32L 13,32L 13,16 Z</StreamGeometry>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="treeListItemStyle" TargetType="{x:Type ListViewItem}">
                <Setter Property="Visibility">
                    <Setter.Value>
                        <Binding  Path="RowVisiblity"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="FontSize" Value="14" />
                <Setter Property="FontFamily" Value="Microsoft YaHei" />
            </Style>
            <Style x:Key="treeListHeadStyle" TargetType="{x:Type GridViewColumnHeader}">
                <Setter Property="HorizontalContentAlignment" Value="center" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="FontFamily" Value="Microsoft YaHei" />
                <Setter Property="Foreground" Value="Gray" />
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="26"></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition Width="260"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <ListView Name="coverageTree" ItemsSource="{Binding Data}" Grid.RowSpan="2" ItemContainerStyle="{StaticResource treeListItemStyle}">
            <ListView.View>
                <GridView AllowsColumnReorder="False" ColumnHeaderContainerStyle="{StaticResource treeListHeadStyle}">
                    <GridView.Columns>
                        <GridViewColumn Width="200" Header="Name">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal" Margin="{Binding Margin}">
                                        <ToggleButton IsChecked="{Binding IsCollapse}" Visibility="{Binding TreeIconVisiblity}" Style="{StaticResource ExpandCollapseToggleStyle}"/>
                                        <Rectangle Width="18" Height="13" Margin="5,0,0,0" Visibility="{Binding LeafIconVisiblity}">
                                            <Rectangle.Resources>
                                                <SolidColorBrush x:Key="BlackBrush" Color="#CC119EDA" />
                                            </Rectangle.Resources>
                                            <Rectangle.Fill>
                                                <VisualBrush Stretch="Fill">
                                                    <VisualBrush.Visual>
                                                        <Canvas Width="48" Height="48" Clip="F1 M 0,0L 48,0L 48,48L 0,48L 0,0" UseLayoutRounding="False">
                                                            <Path Width="22" Height="26" Canvas.Left="13" Canvas.Top="11" Stretch="Fill" Fill="{DynamicResource BlackBrush}" Data="F1 M 13,11L 35,11L 35,37L 13,37L 13,11 Z M 15,13L 15,17L 19,17L 19,13L 15,13 Z M 15,35L 19,35L 19,33L 15,33L 15,35 Z M 19,30L 15,30L 15,32L 19,32L 19,30 Z M 19,27L 15,27L 15,29L 19,29L 19,27 Z M 19,24L 15,24L 15,26L 19,26L 19,24 Z M 19,21L 15,21L 15,23L 19,23L 19,21 Z M 19,18L 15,18L 15,20L 19,20L 19,18 Z M 33,35L 33,33L 20,33L 20,35L 33,35 Z M 33,30L 20,30L 20,32L 33,32L 33,30 Z M 33,27L 20,27L 20,29L 33,29L 33,27 Z M 33,24L 20,24L 20,26L 33,26L 33,24 Z M 33,21L 20,21L 20,23L 33,23L 33,21 Z M 33,18L 20,18L 20,20L 33,20L 33,18 Z M 33,13L 20,13L 20,17L 33,17L 33,13 Z " />
                                                        </Canvas>
                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </Rectangle.Fill>
                                        </Rectangle>
                                        <TextBlock Text="{Binding Name}" Margin="5,0,0,0" FontFamily="Microsoft YaHei" FontSize="16" >
                                            <TextBlock.InputBindings>
                                            <MouseBinding Gesture="LeftDoubleClick" Command="{Binding ElementName=coverageTree, Path=DataContext.LoadSourceCode}" CommandParameter="{Binding ElementName=coverageTree, Path=SelectedItem}"/>
                                            </TextBlock.InputBindings>
                                        </TextBlock>
                                    </StackPanel>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="CoveredLines" Width="100" DisplayMemberBinding="{Binding CoveredLinesCount}" />
                        <GridViewColumn Header="TotalLines" Width="100" DisplayMemberBinding="{Binding TotalLinesCount}"/>
                        <GridViewColumn Header="LineCoverage" Width="100">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding LineCoverageRate,StringFormat={}{0:p}}" Foreground="{Binding LineCoverageColor}"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="CoveredBlocks" Width="100" DisplayMemberBinding="{Binding CoveredBlocksCount}"/>
                        <GridViewColumn Header="TotalBlocks" Width="100" DisplayMemberBinding="{Binding TotalBlocksCount}"/>
                        <GridViewColumn Header="BlockCoverage" Width="100">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding BlockCoverageRate, StringFormat={}{0:p}}" Foreground="{Binding BlockCoverageColor}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView.Columns>
                </GridView>
            </ListView.View>
        </ListView>
        <StackPanel Grid.Column="1" Orientation="Horizontal">
            <TextBox Name="path" Text="{Binding Path=CoverageResultPath, UpdateSourceTrigger=PropertyChanged}" Width="180"></TextBox>
            <Button Content="打开"  Command="{Binding LoadCoverage}" Style="{DynamicResource SquareButtonStyle}"></Button>
        </StackPanel>
    </Grid>
</UserControl>
